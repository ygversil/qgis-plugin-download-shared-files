"""
/***************************************************************************
 DownloadSharedFiles
                                 A QGIS plugin
 This plugin provides a processing algorithm to download files hosted on one or
 multiple web repositories.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-10-28
        copyright            : (C) 2021 by Yann Voté
        email                : ygversil@lilo.org
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Yann Voté'
__date__ = '2021-10-28'
__copyright__ = '(C) 2021 by Yann Voté'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'


from contextlib import AbstractContextManager, contextmanager
from qgis.core import QgsProcessingException, QgsSettings

from .qgis_log import log_exception


class QgisStepManager(AbstractContextManager):
    """Context manager that manages steps, that is child algorithms, in a QGIS
    processing flow."""

    def __init__(self, feedback, abort_message='Aborting on user request'):
        self.feedback = feedback
        self.current_step = 0
        self.abort_message = abort_message

    def __exit__(self, exc_type, exc_val, exc_tb):
        self.current_step += 1
        self.feedback.setCurrentStep(self.current_step)
        if self.feedback.isCanceled():
            raise QgsProcessingException(self.abort_message)
        return False


@contextmanager
def qgis_group_settings(group_prefix):
    """Context manager returning a ``QgsSettings`` instance ready to read
    settings within the `group_prefix`` group.

    It ensures that the group is ended on exit.
    """
    s = QgsSettings()
    s.beginGroup(group_prefix)
    try:
        yield s
    except Exception as err:
        log_exception(err)
    finally:
        s.sync()
        s.endGroup()
