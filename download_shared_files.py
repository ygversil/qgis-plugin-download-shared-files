# -*- coding: utf-8 -*-

"""
/***************************************************************************
 DownloadSharedFiles
                                 A QGIS plugin
 This plugin provides a processing algorithm to download files hosted on one or
 multiple web repositories.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-10-28
        copyright            : (C) 2021 by Yann Voté
        email                : ygversil@lilo.org
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Yann Voté'
__date__ = '2021-10-28'
__copyright__ = '(C) 2021 by Yann Voté'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

from urllib.error import URLError
from urllib.parse import urljoin
from urllib.request import urlopen
import os
import sys
import inspect

from PyQt5.QtCore import QSettings, QTranslator, qVersion, QCoreApplication
from qgis.core import QgsApplication
from yaml import SafeLoader, load as load_yaml
from .config_tools import SETTINGS_GROUP, read_repository_settings
from .context_managers import qgis_group_settings
from .resources import *  # noqa
from .download_shared_files_provider import DownloadSharedFilesProvider
from .qgis_log import log_message

cmd_folder = os.path.split(inspect.getfile(inspect.currentframe()))[0]

if cmd_folder not in sys.path:
    sys.path.insert(0, cmd_folder)


class DownloadSharedFilesPlugin(object):

    def __init__(self, iface):
        self.provider = None
        # initialize locale
        locale = QSettings().value('locale/userLocale')[0:2]
        locale_path = os.path.join(
            os.path.dirname(__file__),
            'i18n',
            '{}.qm'.format(locale)
        )
        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)
            if qVersion() > '4.3.3':
                QCoreApplication.installTranslator(self.translator)
        # Check for repository updates
        with qgis_group_settings(SETTINGS_GROUP) as s:
            for repo_title in s.childGroups():
                local_version = int(s.value('files_version', '0'))
                repo_settings = read_repository_settings(repo_title)
                try:
                    with urlopen(urljoin(repo_settings.url, 'files.yml')) \
                            as remote_f:
                        remote_version = int(
                            load_yaml(remote_f.read(),
                                      Loader=SafeLoader)['version']
                        )
                except URLError:
                    remote_version = 0
                if local_version < remote_version:
                    log_message(
                        self.tr(
                            'Files have been added or updated in this '
                            'repository. Please run the Download Shared Files '
                            'algorithm.'
                        ),
                        title=repo_title,
                        level='Info',
                        message_bar=True,
                        iface=iface,
                        duration=0
                    )

    def initProcessing(self):
        """Init Processing provider for QGIS >= 3.8."""
        self.provider = DownloadSharedFilesProvider()
        QgsApplication.processingRegistry().addProvider(self.provider)

    def initGui(self):
        self.initProcessing()

    def tr(self, message):
        return QCoreApplication.translate('DownloadSharedFilesPlugin', message)

    def unload(self):
        QgsApplication.processingRegistry().removeProvider(self.provider)
